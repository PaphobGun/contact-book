{"version":3,"sources":["reducers/personReducer.js","reducers/googleAuthReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/NavItem.js","components/auth/GoogleAuth.js","actions/googleAuthActions.js","components/layout/Navbar.js","components/layout/Header.js","components/persons/Person.js","actions/personActions.js","components/layout/Spinner.js","components/persons/Persons.js","components/layout/FormGroup.js","components/layout/AddForm.js","components/persons/AddPerson.js","components/persons/EditPerson.js","components/pages/About.js","components/pages/NotFound.js","components/pages/Welcome.js","components/App.js","index.js"],"names":["initialState","persons","person","isSignedIn","userDetails","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","filter","id","map","auth","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","NavItem","props","icon","text","path","react_default","a","createElement","className","Link","to","GoogleAuth","onAuthChange","_this$props","_this","signIn","signOut","userId","currentUser","get","getId","firstName","getBasicProfile","ofa","lastName","wea","onSignIn","onSignOut","_this2","this","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderGoogleButton","Component","connect","_props$userDetails","Fragment","data-toggle","data-target","layout_NavItem","renderMenu","renderAbout","auth_GoogleAuth","Header","style","fontWeight","currentUserId","delPerson","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","wrap","_context4","prev","next","axios","delete","stop","_x4","_props$person","email","phone","userFirstName","userLastName","deletePerson","renderButtonEditAndDelete","Spinner","width","height","role","Persons","renderPersons","persons_Person","key","fetchPersons","layout_Spinner","layout_Header","Redirect","_ref","_callee","res","_context","sent","data","_x","FormGroup","name","label","placeholder","error","value","handleChange","htmlFor","classnames","is-invalid","onChange","AddForm","onSubmit","_props$parentState","parentState","errors","layout_FormGroup","textTransform","fontSize","AddPerson","e","setState","defineProperty","target","preventDefault","_this$state","newPerson","addPerson","history","push","layout_AddForm","_ref3","_callee3","_context3","post","_x3","EditPerson","updatedPerson","match","params","editPerson","fetchPerson","prevProps","snapshot","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x5","About","href","rel","NotFound","App","es","BrowserRouter","basename","process","layout_Navbar","Switch","Route","exact","component","Welcome","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4f95c348.chunk.js","sourcesContent":["import {\r\n  FETCH_PERSONS,\r\n  FETCH_PERSON,\r\n  ADD_PERSON,\r\n  EDIT_PERSON,\r\n  DEL_PERSON\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  persons: [],\r\n  person: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // put all persons from api to 'persons' [array]\r\n    case FETCH_PERSONS:\r\n      return {\r\n        ...state,\r\n        persons: action.payload\r\n      };\r\n    // put the selected person to the 'person' {obj}\r\n    case FETCH_PERSON:\r\n      return {\r\n        ...state,\r\n        person: action.payload\r\n      };\r\n    // add new person into the brginning of 'persons' [array]\r\n    case ADD_PERSON:\r\n      return {\r\n        ...state,\r\n        persons: [action.payload, ...state.persons]\r\n      };\r\n    // filter the deleted person out of the state\r\n    case DEL_PERSON:\r\n      return {\r\n        ...state,\r\n        persons: state.persons.filter(person => person.id !== action.payload)\r\n      };\r\n    // Edit the selected person\r\n    case EDIT_PERSON:\r\n      return {\r\n        ...state,\r\n        // iterate over 'persons' [array] to find if that person.id is equal action.payload.id ( which is the one that was patched ) then set that person to equal action.payload\r\n        persons: state.persons.map(person =>\r\n          person.id === action.payload.id ? (person = action.payload) : person\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isSignedIn: null,\r\n  userDetails: 'null'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        userDetails: action.payload\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        isSignedIn: false,\r\n        userDetails: 'null'\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport personReducer from './personReducer';\r\nimport googleAuthReducer from './googleAuthReducer';\r\n\r\nexport default combineReducers({\r\n  person: personReducer,\r\n  auth: googleAuthReducer\r\n});\r\n","export const FETCH_PERSONS = 'FETCH_PERSONS';\r\nexport const FETCH_PERSON = 'FETCH_PERSON';\r\nexport const ADD_PERSON = 'ADD_PERSON';\r\nexport const EDIT_PERSON = 'EDIT_PERSON';\r\nexport const DEL_PERSON = 'DEL_PERSON';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n// This is initial state\r\nconst initialState = {};\r\n\r\n// A middleware container right now has only one which is thunk\r\nconst middleware = [thunk];\r\n\r\n// Create store and set multiple enhancer by compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    // spread all of middile ware into applyMiddleware\r\n    applyMiddleware(...middleware),\r\n    // enable redux devtools and set it to avaible even user doesn't have redux devtools\r\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n      compose()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Navitem\r\nconst NavItem = props => {\r\n  const { icon, text, path } = props;\r\n\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <Link to={path} className=\"nav-link\">\r\n        <i className={icon} /> {text}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  icon: PropTypes.string,\r\n  text: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../../actions/googleAuthActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n// from OAuth google\r\n// here is documentation\r\n// https://developers.google.com/api-client-library/javascript/reference/referencedocs#authentication\r\nclass GoogleAuth extends Component {\r\n  componentDidMount() {\r\n    // 'gapi' from window that included by google lib which is attached in script tag index.html\r\n    window.gapi.load('client:auth2', () => {\r\n      // A callback that will run when successfully load data (javascript) from gapi\r\n      // to initialized our client ( async ) that return a promise\r\n      window.gapi.client\r\n        .init({\r\n          // clientId from console.developer.google\r\n          clientId:\r\n            '962318506559-v2jo1aqh68jll34th5m61phdnatffp68.apps.googleusercontent.com',\r\n          // scope that want to access from the user\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          // get ref from auth obj and store in this component\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          // get the boolean from auth obj is it signedIn or not and pass it as arguement\r\n          // to update state in redux store\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // event listener ( method in prototype of isSigendIn from google api )\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  // to check that is user signed in or not\r\n  onAuthChange = isSignedIn => {\r\n    const { signIn, signOut } = this.props;\r\n\r\n    // call action creator signIn to set 'isSignedIn in redux store to be true'\r\n    // and pass the id, first name, last name of current user as an arguement as well\r\n    if (isSignedIn) {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const firstName = this.auth.currentUser.get().getBasicProfile().ofa;\r\n      const lastName = this.auth.currentUser.get().getBasicProfile().wea;\r\n\r\n      const currentUser = {\r\n        userId,\r\n        firstName,\r\n        lastName\r\n      };\r\n      signIn(currentUser);\r\n      // call action creator signOut to set 'isSignedIn in redux store to be false'\r\n    } else {\r\n      signOut();\r\n    }\r\n  };\r\n\r\n  // to sign in with google account\r\n  onSignIn = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  // to sign out\r\n  onSignOut = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderGoogleButton() {\r\n    const { isSignedIn } = this.props;\r\n\r\n    if (isSignedIn === null) {\r\n      return null;\r\n      // if already signed in\r\n    } else if (isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOut} className=\"btn btn-danger\">\r\n          <i className=\"fab fa-google\" /> Sign Out\r\n        </button>\r\n      );\r\n      // if not signed in\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignIn} className=\"btn btn-danger\">\r\n          <i className=\"fab fa-google\" /> Sign In\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderGoogleButton()}</div>;\r\n  }\r\n}\r\n\r\nGoogleAuth.propTypes = {\r\n  isSignedIn: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import { SIGN_IN, SIGN_OUT } from './types';\r\n\r\nexport const signIn = currentUser => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: currentUser\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport NavItem from './NavItem';\r\nimport GoogleAuth from '../auth/GoogleAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\n// user will see the menu by sign in only\r\nconst renderMenu = (firstName, lastName, isSignedIn) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarMain\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <NavItem icon=\"fas fa-home\" text=\"Home\" path=\"/persons\" />\r\n            <NavItem\r\n              icon=\"fas fa-plus-square\"\r\n              text=\"Add Contact\"\r\n              path=\"/persons/add\"\r\n            />\r\n            <NavItem icon=\"fas fa-question-circle\" text=\"About\" path=\"/about\" />\r\n          </ul>{' '}\r\n          <div className=\"ml-auto mr-3 btn btn-info mb-resp\">\r\n            Welcome! {firstName[0]}\r\n            {lastName[0]}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\n// If user is not signed In user ill still see the About menu\r\nconst renderAbout = isSignedIn => {\r\n  if (!isSignedIn) {\r\n    return (\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fas fa-question-circle\" /> About\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\n// Navbar\r\nconst Navbar = props => {\r\n  const { firstName, lastName } = props.userDetails;\r\n  const { isSignedIn } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Contact Book\r\n        </Link>\r\n        {renderMenu(firstName, lastName, isSignedIn)}\r\n        {renderAbout(isSignedIn)}\r\n        <GoogleAuth />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  isSignedIn: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    userDetails: state.auth.userDetails\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"text-center bg-danger header\">\r\n      <h1 className=\"display-4 mb-5 text-white\">\r\n        <i className=\"fas fa-users d-none d-sm-block\" />\r\n        <span style={{ fontWeight: '500' }}>Contact Book</span>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { delPerson } from '../../actions/personActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Delete the selected person ( filter by id )\r\nconst deletePerson = (id, delPerson) => {\r\n  // Call an action\r\n  delPerson(id);\r\n};\r\n\r\n// User will only see the button on the contact that user added by his/her own only\r\nconst renderButtonEditAndDelete = (userId, id, currentUserId, delPerson) => {\r\n  if (userId === currentUserId) {\r\n    return (\r\n      <div className=\"card-footer\">\r\n        <div className=\"btn-group\">\r\n          <Link className=\"btn btn-info\" to={`/persons/edit/${id}`}>\r\n            Edit\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => deletePerson(id, delPerson)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// Infomation for each person\r\nconst Person = props => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phone,\r\n    id,\r\n    userFirstName,\r\n    userLastName,\r\n    userId\r\n  } = props.person;\r\n\r\n  const { delPerson, currentUserId } = props;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-8 mx-auto\">\r\n        <div className=\"card mb-4\">\r\n          <div className=\"card-header bg-danger clearfix\">\r\n            <h4 className=\"text-white\">{firstName}</h4>\r\n            <small className=\"text-white\">\r\n              Added by {userFirstName} {userLastName}\r\n            </small>\r\n          </div>\r\n          <div className=\"card-body text-secondary\">\r\n            <p>First Name: {firstName}</p>\r\n            <p>Last Name: {lastName}</p>\r\n            <p>Email: {email}</p>\r\n            <p>Phone: {phone}</p>\r\n          </div>\r\n          {renderButtonEditAndDelete(userId, id, currentUserId, delPerson)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPerson.propTypes = {\r\n  currentUserId: PropTypes.string,\r\n  delPerson: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUserId: state.auth.userDetails.userId\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { delPerson }\r\n)(Person);\r\n","import {\r\n  FETCH_PERSONS,\r\n  FETCH_PERSON,\r\n  ADD_PERSON,\r\n  EDIT_PERSON,\r\n  DEL_PERSON\r\n} from './types';\r\n\r\nimport axios from 'axios';\r\n\r\n// Make a get request to fetch all persons in db\r\nexport const fetchPersons = () => async dispatch => {\r\n  const res = await axios.get(\r\n    'https://server-contactbook.herokuapp.com/persons/'\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_PERSONS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a get request to fetch the selected person\r\nexport const fetchPerson = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://server-contactbook.herokuapp.com/persons/${id}`\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a post request to add new person into db\r\nexport const addPerson = person => async dispatch => {\r\n  const res = await axios.post(\r\n    'https://server-contactbook.herokuapp.com/persons/',\r\n    person\r\n  );\r\n\r\n  dispatch({\r\n    type: ADD_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a delete request to delete that person on db\r\nexport const delPerson = id => async dispatch => {\r\n  await axios.delete(`https://server-contactbook.herokuapp.com/persons/${id}`);\r\n\r\n  dispatch({\r\n    type: DEL_PERSON,\r\n    payload: id\r\n  });\r\n};\r\n\r\n// Make a put request to update the selected person on db\r\nexport const editPerson = person => async dispatch => {\r\n  const res = await axios.put(\r\n    `https://server-contactbook.herokuapp.com/persons/${person.id}`,\r\n    person\r\n  );\r\n\r\n  dispatch({\r\n    type: EDIT_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"container my-5 text-center\">\r\n      <div\r\n        className=\"spinner-border text-secondary\"\r\n        style={{\r\n          width: '80px',\r\n          height: '80px'\r\n        }}\r\n        role=\"status\"\r\n      />\r\n      <h1 className=\"mt-5 display-4 text-secondary\">Loading Please Wait...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPersons } from '../../actions/personActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../layout/Header';\r\nimport Person from './Person';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n// Fetch persons from server and render all of it\r\nclass Persons extends Component {\r\n  componentDidMount() {\r\n    // Fetch all persons from api when page is loaded\r\n    this.props.fetchPersons();\r\n  }\r\n\r\n  // Custom function to render all person\r\n  renderPersons = () => {\r\n    const { persons } = this.props;\r\n    return persons.map(person => <Person key={person.id} person={person} />);\r\n  };\r\n\r\n  render() {\r\n    const { persons, isSignedIn } = this.props;\r\n\r\n    // If user is not signed in redirect to welcome page\r\n    if (!isSignedIn) return <Redirect to=\"/\" />;\r\n\r\n    // render spinner when waiting for ajax call\r\n    if (persons.length === 0) return <Spinner />;\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"container mt-5\">{this.renderPersons()} </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    persons: state.person.persons,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPersons }\r\n)(Persons);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormGroup = props => {\r\n  const { name, label, type, placeholder, error, value, handleChange } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          className={classnames('form-control', {\r\n            'is-invalid': error\r\n          })}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFormGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  error: PropTypes.string,\r\n  value: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from 'react';\r\nimport FormGroup from './FormGroup';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddForm = props => {\r\n  const { onChange, onSubmit } = props;\r\n\r\n  const { errors, firstName, lastName, email, phone } = props.parentState;\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <FormGroup\r\n        name=\"firstName\"\r\n        label=\"First Name\"\r\n        type=\"text\"\r\n        placeholder=\"Enter First Name\"\r\n        handleChange={onChange}\r\n        value={firstName}\r\n        error={errors.firstName}\r\n      />\r\n      <FormGroup\r\n        name=\"lastName\"\r\n        label=\"Last Name\"\r\n        type=\"text\"\r\n        placeholder=\"Enter Last Name\"\r\n        handleChange={onChange}\r\n        value={lastName}\r\n        error={errors.lastName}\r\n      />\r\n      <FormGroup\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        placeholder=\"Enter Email\"\r\n        handleChange={onChange}\r\n        value={email}\r\n        error={errors.email}\r\n      />\r\n      <FormGroup\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        type=\"text\"\r\n        placeholder=\"Enter Phone Number\"\r\n        handleChange={onChange}\r\n        value={phone}\r\n        error={errors.phone}\r\n      />\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n        className=\"btn btn-danger btn-block\"\r\n        style={{\r\n          textTransform: 'uppercase',\r\n          fontWeight: '600',\r\n          fontSize: '1.2rem'\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddForm.propTypes = {\r\n  parentState: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddForm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { addPerson } from '../../actions/personActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddForm from '../layout/AddForm';\r\n\r\n// To add new person\r\nclass AddPerson extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  // Controlled input\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // Submit the form to call personActions for make POST request\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, email, phone } = this.state;\r\n\r\n    // Validation\r\n    if (firstName === '') {\r\n      this.setState({ errors: { firstName: 'First Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      this.setState({ errors: { lastName: 'Last Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone Number is required' } });\r\n      return;\r\n    }\r\n\r\n    // Create obj of newPerson to send POST request\r\n    const newPerson = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      userFirstName: this.props.auth.firstName,\r\n      userLastName: this.props.auth.lastName,\r\n      userId: this.props.auth.userId\r\n    };\r\n\r\n    // Call action creator\r\n    this.props.addPerson(newPerson);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to main page\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    //if not signed in rediect to main page\r\n    if (!this.props.isSignedIn) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header bg-danger\">\r\n                <h3 className=\"text-white\">Add New Person</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <AddForm\r\n                  parentState={this.state}\r\n                  onChange={this.onChange}\r\n                  onSubmit={this.onSubmit}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddPerson.propTypes = {\r\n  isSignedIn: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.userDetails,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addPerson }\r\n)(AddPerson);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fetchPerson, editPerson } from '../../actions/personActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddForm from '../layout/AddForm';\r\n\r\n// Edit person\r\nclass EditPerson extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.fetchPerson(id);\r\n  }\r\n\r\n  // after it DidMount it will be rerender then this lifecycle will be run\r\n  // if currentProps.person !== previousProps.person then update it to be currentProps.person\r\n  componentDidUpdate(prevProps, state, snapshot) {\r\n    if (this.props.person !== prevProps.person) {\r\n      this.setState(this.props.person);\r\n    }\r\n  }\r\n\r\n  // Controlled input\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // Submit the form to call personActions for make PATCH request\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, email, phone } = this.state;\r\n\r\n    // Validation\r\n    if (firstName === '') {\r\n      this.setState({ errors: { firstName: 'First Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      this.setState({ errors: { lastName: 'Last Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone Number is required' } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    // Create obj of updatedPerson to send PUT request\r\n    const updatedPerson = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      userFirstName: this.props.auth.firstName,\r\n      userLastName: this.props.auth.lastName,\r\n      userId: this.props.auth.userId\r\n    };\r\n\r\n    // Call action creator\r\n    this.props.editPerson(updatedPerson);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to main page\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    // If not signed In redirect to main page\r\n    if (!this.props.isSignedIn) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header bg-danger\">\r\n                <h3 className=\"text-white\">Edit Information</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <AddForm\r\n                  parentState={this.state}\r\n                  onChange={this.onChange}\r\n                  onSubmit={this.onSubmit}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditPerson.propTypes = {\r\n  person: PropTypes.object,\r\n  isSignedIn: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.userDetails,\r\n    person: state.person.person,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPerson, editPerson }\r\n)(EditPerson);\r\n","import React from 'react';\r\n\r\n// About page contains infomations of this application...\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 mx-auto\">\r\n          <div className=\"card mt-5\">\r\n            <div className=\"card-header bg-danger text-white\">\r\n              <h5>\r\n                How to use <i className=\"fas fa-question-circle\" />\r\n              </h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              In order to add new contact you have to{' '}\r\n              <span className=\"text-danger\">sign in with google account</span>,\r\n              and then you will see the \"Add Contact\" menu from the navbar.You\r\n              can edit and delete the contact that added by yourself only ,\r\n              <span className=\"text-danger\">\r\n                You can not edit or delete the one that added by others.\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 mx-auto\">\r\n          <div className=\"card mt-5\">\r\n            <div className=\"card-header bg-danger text-white\">\r\n              <h5>\r\n                Information <i className=\"fas fa-exclamation-circle\" />\r\n              </h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              This aplication created by Paphob Aneakpoonsinsuk. Using React and\r\n              Redux to developped.This aplication have a full CRUD operation by\r\n              making request on REST API, json-server is the API that used in\r\n              this project and hosted on Heroku.com, In this aplication will use\r\n              OAuth ( google login ) to manage Authorization.\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <a\r\n                href=\"https://github.com/PaphobGun/contact-book\"\r\n                className=\"btn btn-dark\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Repository\r\n              </a>\r\n              <p className=\"d-inline ml-2\">\r\n                Here is the link to Github repository\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <h1 className=\"display-4 text-danger\">Error 404 Page Not Found</h1>\r\n      <div className=\"card mt-5\">\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">\r\n            Url is not correct please click the link on navbar to navigate to\r\n            the right page or click on this button\r\n          </div>\r\n          <hr />\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Go to home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst Welcome = props => {\r\n  const { isSignedIn } = props;\r\n  // If user is signed in redirect to main page\r\n  if (isSignedIn) return <Redirect to=\"/persons\" />;\r\n\r\n  return (\r\n    <div className=\"welcome\">\r\n      <div className=\"welcome__overlay\">\r\n        <h1>\r\n          c<span className=\"text-danger\">o</span>nt\r\n          <span className=\"text-danger\">a</span>ct b\r\n          <span className=\"text-danger\">o</span>ok\r\n        </h1>\r\n        <h3>Collect and note your contact details at one place...</h3>\r\n        <Link to=\"/about\" className=\"welcome__overlay--btn about\">\r\n          About\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Welcome);\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport store from '../store';\nimport Navbar from './layout/Navbar';\nimport Persons from './persons/Persons';\nimport AddPerson from './persons/AddPerson';\nimport EditPerson from './persons/EditPerson';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound';\nimport Welcome from './pages/Welcome';\n\nimport '../scss/App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Welcome} />\n              <Route exact path=\"/persons\" component={Persons} />\n              <Route exact path=\"/persons/add\" component={AddPerson} />\n              <Route exact path=\"/persons/edit/:id\" component={EditPerson} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}