{"version":3,"sources":["reducers/personReducer.js","reducers/googleAuthReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/NavItem.js","components/auth/GoogleAuth.js","actions/googleAuthActions.js","components/layout/Navbar.js","components/persons/Person.js","actions/personActions.js","components/persons/Persons.js","components/layout/FormGroup.js","components/layout/AddForm.js","components/persons/AddPerson.js","components/persons/EditPerson.js","components/pages/About.js","components/pages/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["initialState","persons","person","isSignedIn","userDetails","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","filter","id","map","auth","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","NavItem","props","icon","text","path","react_default","a","createElement","className","Link","to","GoogleAuth","onAuthChange","_this$props","_this","signIn","signOut","userId","currentUser","get","getId","firstName","getBasicProfile","ofa","lastName","wea","onSignIn","onSignOut","_this2","this","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderGoogleButton","Component","connect","Navbar","_this$props$userDetai","Fragment","data-toggle","data-target","layout_NavItem","renderMenu","renderAbout","auth_GoogleAuth","Person","deletePerson","delPerson","currentUserId","bind","_this$props$person","email","phone","userFirstName","userLastName","renderButtonEditAndDelete","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","wrap","_context4","prev","next","axios","delete","stop","_x4","Persons","renderPersons","persons_Person","key","fetchPersons","role","_ref","_callee","res","_context","sent","data","_x","FormGroup","name","label","placeholder","error","value","handleChange","htmlFor","classnames","is-invalid","onChange","AddForm","onSubmit","_this$props$parentSta","parentState","errors","layout_FormGroup","AddPerson","e","setState","defineProperty","target","preventDefault","_this$state","newPerson","addPerson","history","push","layout_AddForm","Redirect","_ref3","_callee3","_context3","post","_x3","EditPerson","updatedPerson","match","params","editPerson","fetchPerson","prevProps","snapshot","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x5","About","href","rel","NotFound","App","es","BrowserRouter","basename","process","layout_Navbar","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8236a3d6.chunk.js","sourcesContent":["import {\r\n  FETCH_PERSONS,\r\n  FETCH_PERSON,\r\n  ADD_PERSON,\r\n  EDIT_PERSON,\r\n  DEL_PERSON\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  persons: [],\r\n  person: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // put all persons from api to 'persons' [array]\r\n    case FETCH_PERSONS:\r\n      return {\r\n        ...state,\r\n        persons: action.payload\r\n      };\r\n    // put the selected person to the 'person' {obj}\r\n    case FETCH_PERSON:\r\n      return {\r\n        ...state,\r\n        person: action.payload\r\n      };\r\n    // add new person into the brginning of 'persons' [array]\r\n    case ADD_PERSON:\r\n      return {\r\n        ...state,\r\n        persons: [action.payload, ...state.persons]\r\n      };\r\n    // filter the deleted person out of the state\r\n    case DEL_PERSON:\r\n      return {\r\n        ...state,\r\n        persons: state.persons.filter(person => person.id !== action.payload)\r\n      };\r\n    // Edit the selected person\r\n    case EDIT_PERSON:\r\n      return {\r\n        ...state,\r\n        // iterate over 'persons' [array] to find if that person.id is equal action.payload.id ( which is the one that was patched ) then set that person to equal action.payload\r\n        persons: state.persons.map(person =>\r\n          person.id === action.payload.id ? (person = action.payload) : person\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isSignedIn: null,\r\n  userDetails: 'null'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        userDetails: action.payload\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        isSignedIn: false,\r\n        userDetails: 'null'\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport personReducer from './personReducer';\r\nimport googleAuthReducer from './googleAuthReducer';\r\n\r\nexport default combineReducers({\r\n  person: personReducer,\r\n  auth: googleAuthReducer\r\n});\r\n","export const FETCH_PERSONS = 'FETCH_PERSONS';\r\nexport const FETCH_PERSON = 'FETCH_PERSON';\r\nexport const ADD_PERSON = 'ADD_PERSON';\r\nexport const EDIT_PERSON = 'EDIT_PERSON';\r\nexport const DEL_PERSON = 'DEL_PERSON';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n// This is initial state\r\nconst initialState = {};\r\n\r\n// A middleware container right now has only one which is thunk\r\nconst middleware = [thunk];\r\n\r\n// Create store and set multiple enhancer by compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    // spread all of middile ware into applyMiddleware\r\n    applyMiddleware(...middleware),\r\n    // enable redux devtools and set it to avaible even user doesn't have redux devtools\r\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n      compose()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Navitem\r\nconst NavItem = props => {\r\n  const { icon, text, path } = props;\r\n\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <Link to={path} className=\"nav-link\">\r\n        <i className={icon} /> {text}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../../actions/googleAuthActions';\r\n\r\n// from OAuth google\r\n// here is documentation\r\n// https://developers.google.com/api-client-library/javascript/reference/referencedocs#authentication\r\nclass GoogleAuth extends Component {\r\n  componentDidMount() {\r\n    // 'gapi' from window that included by google lib which is attached in script tag index.html\r\n    window.gapi.load('client:auth2', () => {\r\n      // A callback that will run when successfully load data (javascript) from gapi\r\n      // to initialized our client ( async ) that return a promise\r\n      window.gapi.client\r\n        .init({\r\n          // clientId from console.developer.google\r\n          clientId:\r\n            '962318506559-v2jo1aqh68jll34th5m61phdnatffp68.apps.googleusercontent.com',\r\n          // scope that want to access from the user\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          // get ref from auth obj and store in this component\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          // get the boolean from auth obj is it signedIn or not and pass it as arguement\r\n          // to update state in redux store\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // event listener ( method in prototype of isSigendIn from google api )\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  // to check that is user signed in or not\r\n  onAuthChange = isSignedIn => {\r\n    const { signIn, signOut } = this.props;\r\n\r\n    // call action creator signIn to set 'isSignedIn in redux store to be true'\r\n    // and pass the id, first name, last name of current user as an arguement as well\r\n    if (isSignedIn) {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const firstName = this.auth.currentUser.get().getBasicProfile().ofa;\r\n      const lastName = this.auth.currentUser.get().getBasicProfile().wea;\r\n\r\n      const currentUser = {\r\n        userId,\r\n        firstName,\r\n        lastName\r\n      };\r\n      signIn(currentUser);\r\n      // call action creator signOut to set 'isSignedIn in redux store to be false'\r\n    } else {\r\n      signOut();\r\n    }\r\n  };\r\n\r\n  // to sign in with google account\r\n  onSignIn = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  // to sign out\r\n  onSignOut = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderGoogleButton() {\r\n    const { isSignedIn } = this.props;\r\n\r\n    if (isSignedIn === null) {\r\n      return null;\r\n      // if already signed in\r\n    } else if (isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOut} className=\"btn btn-danger\">\r\n          <i className=\"fab fa-google\" /> Sign Out\r\n        </button>\r\n      );\r\n      // if not signed in\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignIn} className=\"btn btn-danger\">\r\n          <i className=\"fab fa-google\" /> Sign In\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderGoogleButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import { SIGN_IN, SIGN_OUT } from './types';\r\n\r\nexport const signIn = currentUser => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: currentUser\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport NavItem from './NavItem';\r\nimport GoogleAuth from '../auth/GoogleAuth';\r\n\r\n// Navbar\r\nclass Navbar extends Component {\r\n  // user will see the menu by sign in only\r\n  renderMenu() {\r\n    const { firstName, lastName } = this.props.userDetails;\r\n\r\n    if (this.props.isSignedIn)\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarMain\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <NavItem icon=\"fas fa-home\" text=\"Home\" path=\"/\" />\r\n              <NavItem\r\n                icon=\"fas fa-plus-square\"\r\n                text=\"Add Contact\"\r\n                path=\"/persons/add\"\r\n              />\r\n              <NavItem\r\n                icon=\"fas fa-question-circle\"\r\n                text=\"About\"\r\n                path=\"/about\"\r\n              />\r\n            </ul>{' '}\r\n            <div className=\"ml-auto mr-3 btn btn-info mb-resp\">\r\n              Welcome! {firstName[0]}\r\n              {lastName[0]}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n  }\r\n\r\n  // If user is not signed In user ill still see the About menu\r\n  renderAbout() {\r\n    if (!this.props.isSignedIn) {\r\n      return (\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question-circle\" /> About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            Contact Book\r\n          </Link>\r\n          {this.renderMenu()}\r\n          {this.renderAbout()}\r\n          <GoogleAuth />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    userDetails: state.auth.userDetails\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { delPerson } from '../../actions/personActions';\r\n\r\n// Infomation for each person\r\nclass Person extends Component {\r\n  // Delete the selected person ( filter by id )\r\n  deletePerson = id => {\r\n    this.props.delPerson(id);\r\n  };\r\n\r\n  renderButtonEditAndDelete(userId, id) {\r\n    if (userId === this.props.currentUserId) {\r\n      return (\r\n        <div className=\"card-footer\">\r\n          <Link className=\"btn btn-primary\" to={`/persons/edit/${id}`}>\r\n            Edit\r\n          </Link>\r\n          <button\r\n            className=\"ml-2 btn btn-danger\"\r\n            onClick={this.deletePerson.bind(this, id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      id,\r\n      userFirstName,\r\n      userLastName,\r\n      userId\r\n    } = this.props.person;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 mx-auto\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-header bg-danger clearfix\">\r\n              <h4 className=\"text-white\">{firstName}</h4>\r\n              <small className=\"text-white\">\r\n                Added by {userFirstName} {userLastName}\r\n              </small>\r\n            </div>\r\n            <div className=\"card-body text-secondary\">\r\n              <p>First Name: {firstName}</p>\r\n              <p>Last Name: {lastName}</p>\r\n              <p>Email: {email}</p>\r\n              <p>Phone: {phone}</p>\r\n            </div>\r\n            {this.renderButtonEditAndDelete(userId, id)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUserId: state.auth.userDetails.userId\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { delPerson }\r\n)(Person);\r\n","import {\r\n  FETCH_PERSONS,\r\n  FETCH_PERSON,\r\n  ADD_PERSON,\r\n  EDIT_PERSON,\r\n  DEL_PERSON\r\n} from './types';\r\n\r\nimport axios from 'axios';\r\n\r\n// Make a get request to fetch all persons in db\r\nexport const fetchPersons = () => async dispatch => {\r\n  const res = await axios.get(\r\n    'https://server-contactbook.herokuapp.com/persons/'\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_PERSONS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a get request to fetch the selected person\r\nexport const fetchPerson = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://server-contactbook.herokuapp.com/persons/${id}`\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a post request to add new person into db\r\nexport const addPerson = person => async dispatch => {\r\n  const res = await axios.post(\r\n    'https://server-contactbook.herokuapp.com/persons/',\r\n    person\r\n  );\r\n\r\n  dispatch({\r\n    type: ADD_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a delete request to delete that person on db\r\nexport const delPerson = id => async dispatch => {\r\n  await axios.delete(`https://server-contactbook.herokuapp.com/persons/${id}`);\r\n\r\n  dispatch({\r\n    type: DEL_PERSON,\r\n    payload: id\r\n  });\r\n};\r\n\r\n// Make a put request to update the selected person on db\r\nexport const editPerson = person => async dispatch => {\r\n  const res = await axios.put(\r\n    `https://server-contactbook.herokuapp.com/persons/${person.id}`,\r\n    person\r\n  );\r\n\r\n  dispatch({\r\n    type: EDIT_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPersons } from '../../actions/personActions';\r\nimport Person from './Person';\r\n\r\n// Fetch persons from server and render all of it\r\nclass Persons extends Component {\r\n  componentDidMount() {\r\n    // Fetch all persons from api when page is loaded\r\n    this.props.fetchPersons();\r\n  }\r\n\r\n  // Custom function to render all person\r\n  renderPersons = () => {\r\n    const { persons } = this.props;\r\n    // // reverse 'persons' [array] to always set the newest at the top\r\n    // persons.reverse();\r\n    return persons.map(person => <Person key={person.id} person={person} />);\r\n  };\r\n\r\n  render() {\r\n    const { persons } = this.props;\r\n\r\n    // render spinner when waiting for ajax call\r\n    if (persons.length === 0)\r\n      return (\r\n        <div className=\"container my-5 text-center\">\r\n          <div className=\"spinner-border text-secondary\" role=\"status\" />\r\n          <h1 className=\"mt-5 display-4 text-secondary\">Loading...</h1>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <>\r\n        <div className=\"text-center bg-danger header\">\r\n          <h1 className=\"display-4 mb-5\">\r\n            <span className=\"text-white\">\r\n              <i className=\"fas fa-users d-none d-sm-block\" />\r\n            </span>{' '}\r\n            Contact Book\r\n          </h1>\r\n        </div>\r\n        <div className=\"container mt-5\">{this.renderPersons()} </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    persons: state.person.persons\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPersons }\r\n)(Persons);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst FormGroup = props => {\r\n  const { name, label, type, placeholder, error, value, handleChange } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          className={classnames('form-control', {\r\n            'is-invalid': error\r\n          })}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React, { Component } from 'react';\r\nimport FormGroup from './FormGroup';\r\n\r\nclass AddForm extends Component {\r\n  render() {\r\n    const { onChange, onSubmit } = this.props;\r\n    const {\r\n      errors,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone\r\n    } = this.props.parentState;\r\n\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <FormGroup\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter First Name\"\r\n          handleChange={onChange}\r\n          value={firstName}\r\n          error={errors.firstName}\r\n        />\r\n        <FormGroup\r\n          name=\"lastName\"\r\n          label=\"Last Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Last Name\"\r\n          handleChange={onChange}\r\n          value={lastName}\r\n          error={errors.lastName}\r\n        />\r\n        <FormGroup\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          placeholder=\"Enter Email\"\r\n          handleChange={onChange}\r\n          value={email}\r\n          error={errors.email}\r\n        />\r\n        <FormGroup\r\n          name=\"phone\"\r\n          label=\"Phone Number\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Phone Number\"\r\n          handleChange={onChange}\r\n          value={phone}\r\n          error={errors.phone}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { addPerson } from '../../actions/personActions';\r\nimport AddForm from '../layout/AddForm';\r\n\r\n// To add new person\r\nclass AddPerson extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  // Controlled input\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // Submit the form to call personActions for make POST request\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, email, phone } = this.state;\r\n\r\n    // Validation\r\n    if (firstName === '') {\r\n      this.setState({ errors: { firstName: 'First Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      this.setState({ errors: { lastName: 'Last Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone Number is required' } });\r\n      return;\r\n    }\r\n\r\n    // Create obj of newPerson to send POST request\r\n    const newPerson = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      userFirstName: this.props.auth.firstName,\r\n      userLastName: this.props.auth.lastName,\r\n      userId: this.props.auth.userId\r\n    };\r\n\r\n    // Call action creator\r\n    this.props.addPerson(newPerson);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to main page\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    //if not signed in rediect to main page\r\n    if (!this.props.isSignedIn) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-secondary\">Add New Person</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <AddForm\r\n              parentState={this.state}\r\n              onChange={this.onChange}\r\n              onSubmit={this.onSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.userDetails,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addPerson }\r\n)(AddPerson);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fetchPerson, editPerson } from '../../actions/personActions';\r\nimport AddForm from '../layout/AddForm';\r\n\r\n// Edit person\r\nclass EditPerson extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.fetchPerson(id);\r\n  }\r\n\r\n  // after it DidMount it will be rerender then this lifecycle will be run\r\n  // if currentProps.person !== previousProps.person then update it to be currentProps.person\r\n  componentDidUpdate(prevProps, state, snapshot) {\r\n    if (this.props.person !== prevProps.person) {\r\n      this.setState(this.props.person);\r\n    }\r\n  }\r\n\r\n  // Controlled input\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // Submit the form to call personActions for make PATCH request\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, email, phone } = this.state;\r\n\r\n    // Validation\r\n    if (firstName === '') {\r\n      this.setState({ errors: { firstName: 'First Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      this.setState({ errors: { lastName: 'Last Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone Number is required' } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    // Create obj of updatedPerson to send PUT request\r\n    const updatedPerson = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      userFirstName: this.props.auth.firstName,\r\n      userLastName: this.props.auth.lastName,\r\n      userId: this.props.auth.userId\r\n    };\r\n\r\n    // Call action creator\r\n    this.props.editPerson(updatedPerson);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to main page\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    // If not signed In redirect to main page\r\n    if (!this.props.isSignedIn) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-secondary\">Edit Information</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <AddForm\r\n              parentState={this.state}\r\n              onChange={this.onChange}\r\n              onSubmit={this.onSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.userDetails,\r\n    person: state.person.person,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPerson, editPerson }\r\n)(EditPerson);\r\n","import React from 'react';\r\n\r\n// About page contains infomations of this application...\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 mx-auto\">\r\n          <div className=\"card mt-5\">\r\n            <div className=\"card-header bg-danger text-white\">\r\n              <h5>\r\n                How to use <i className=\"fas fa-question-circle\" />\r\n              </h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              In order to add new contact you have to sign in with google\r\n              account, and then you will see the \"Add Contact\" menu from the\r\n              navbar. You can edit and delete the contact that added by yourself\r\n              only ,You can not edit or delete the one that added by others.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 mx-auto\">\r\n          <div className=\"card mt-5\">\r\n            <div className=\"card-header bg-danger text-white\">\r\n              <h5>\r\n                Information <i className=\"fas fa-exclamation-circle\" />\r\n              </h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              This aplication created by Paphob Aneakpoonsinsuk. Using React and\r\n              Redux to developped.This aplication have a full CRUD operation by\r\n              making request on REST API, json-server is the API that used in\r\n              this project and hosted on Heroku.com, In this aplication will use\r\n              OAuth ( google login ) to manage Authorization.\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <a\r\n                href=\"https://github.com/PaphobGun/contact-book\"\r\n                className=\"btn btn-primary\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Repository\r\n              </a>\r\n              <p className=\"d-inline ml-2\">\r\n                Here is the link to Github repository\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <h1 className=\"display-4 text-danger\">Error 404 Page Not Found</h1>\r\n      <div className=\"card mt-5\">\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">\r\n            Url is not correct please click the link on navbar to navigate to\r\n            the right page or click on this button\r\n          </div>\r\n          <hr />\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Go to home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport store from '../store';\nimport Navbar from './layout/Navbar';\nimport Persons from './persons/Persons';\nimport AddPerson from './persons/AddPerson';\nimport EditPerson from './persons/EditPerson';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound';\n\nimport '../App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Persons} />\n              <Route exact path=\"/persons/add\" component={AddPerson} />\n              <Route exact path=\"/persons/edit/:id\" component={EditPerson} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}