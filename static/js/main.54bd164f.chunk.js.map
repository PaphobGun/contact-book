{"version":3,"sources":["reducers/personReducer.js","reducers/googleAuthReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/NavItem.js","components/auth/GoogleAuth.js","actions/googleAuthActions.js","components/layout/Navbar.js","components/persons/Person.js","actions/personActions.js","components/persons/Persons.js","components/layout/FormGroup.js","components/layout/AddForm.js","components/persons/AddPerson.js","components/persons/EditPerson.js","components/pages/Detail.js","components/pages/Tool.js","components/pages/About.js","components/pages/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["initialState","persons","person","isSignedIn","userDetails","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","filter","id","map","auth","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","NavItem","props","icon","text","path","react_default","a","createElement","className","Link","to","GoogleAuth","onAuthChange","_this$props","_this","signIn","signOut","userId","currentUser","get","getId","firstName","getBasicProfile","ofa","lastName","wea","onSignIn","onSignOut","_this2","this","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderGoogleButton","Component","connect","Navbar","data-toggle","data-target","layout_NavItem","auth_GoogleAuth","Person","deletePerson","delPerson","_this$props$person","email","phone","bind","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","wrap","_context4","prev","next","axios","delete","stop","_x5","Persons","renderPersons","persons_Person","key","fetchPersons","role","_ref","_callee","res","_context","sent","data","_x","FormGroup","name","label","placeholder","error","value","handleChange","Fragment","htmlFor","classnames","is-invalid","onChange","AddForm","onSubmit","_this$props$parentSta","parentState","errors","layout_FormGroup","AddPerson","e","setState","defineProperty","target","preventDefault","_this$state","newPerson","addPerson","history","push","layout_AddForm","_ref3","_callee3","getState","_context3","post","_x3","_x4","EditPerson","updatedPerson","match","params","editPerson","fetchPerson","prevProps","snapshot","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x6","Detail","title","para","Tool","tool","description","About","pages_Detail","href","rel","pages_Tool","NotFound","App","es","BrowserRouter","layout_Navbar","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54bd164f.chunk.js","sourcesContent":["import {\r\n  FETCH_PERSONS,\r\n  FETCH_PERSON,\r\n  ADD_PERSON,\r\n  EDIT_PERSON,\r\n  DEL_PERSON\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  persons: [],\r\n  person: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // put all persons from api to 'persons' [array]\r\n    case FETCH_PERSONS:\r\n      return {\r\n        ...state,\r\n        persons: action.payload\r\n      };\r\n    // put the selected person to the 'person' {obj}\r\n    case FETCH_PERSON:\r\n      return {\r\n        ...state,\r\n        person: action.payload\r\n      };\r\n    // add new person into the brginning of 'persons' [array]\r\n    case ADD_PERSON:\r\n      return {\r\n        ...state,\r\n        persons: [action.payload, ...state.persons]\r\n      };\r\n    // filter the deleted person out of the state\r\n    case DEL_PERSON:\r\n      return {\r\n        ...state,\r\n        persons: state.persons.filter(person => person.id !== action.payload)\r\n      };\r\n    // Edit the selected person\r\n    case EDIT_PERSON:\r\n      return {\r\n        ...state,\r\n        // iterate over 'persons' [array] to find if that person.id is equal action.payload.id ( which is the one that was patched ) then set that person to equal action.payload\r\n        persons: state.persons.map(person =>\r\n          person.id === action.payload.id ? (person = action.payload) : person\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isSignedIn: null,\r\n  userDetails: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {\r\n        ...state,\r\n        isSignedIn: true,\r\n        userDetails: action.payload\r\n      };\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        isSignedIn: false,\r\n        userDetails: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport personReducer from './personReducer';\r\nimport googleAuthReducer from './googleAuthReducer';\r\n\r\nexport default combineReducers({\r\n  person: personReducer,\r\n  auth: googleAuthReducer\r\n});\r\n","export const FETCH_PERSONS = 'FETCH_PERSONS';\r\nexport const FETCH_PERSON = 'FETCH_PERSON';\r\nexport const ADD_PERSON = 'ADD_PERSON';\r\nexport const EDIT_PERSON = 'EDIT_PERSON';\r\nexport const DEL_PERSON = 'DEL_PERSON';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n// This is initial state\r\nconst initialState = {};\r\n\r\n// A middleware container right now has only one which is thunk\r\nconst middleware = [thunk];\r\n\r\n// Create store and set multiple enhancer by compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    // spread all of middile ware into applyMiddleware\r\n    applyMiddleware(...middleware),\r\n    // enable redux devtools and set it to avaible even user doesn't have redux devtools\r\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n      compose()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Navitem\r\nconst NavItem = props => {\r\n  const { icon, text, path } = props;\r\n\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <Link to={path} className=\"nav-link\">\r\n        <i className={icon} /> {text}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../../actions/googleAuthActions';\r\n\r\n// from OAuth google\r\n// here is documentation\r\n// https://developers.google.com/api-client-library/javascript/reference/referencedocs#authentication\r\nclass GoogleAuth extends Component {\r\n  componentDidMount() {\r\n    // 'gapi' from window that included by google lib which is attached in script tag index.html\r\n    window.gapi.load('client:auth2', () => {\r\n      // A callback that will run when successfully load data (javascript) from gapi\r\n      // to initialized our client ( async ) that return a promise\r\n      window.gapi.client\r\n        .init({\r\n          // clientId from console.developer.google\r\n          clientId:\r\n            '962318506559-v2jo1aqh68jll34th5m61phdnatffp68.apps.googleusercontent.com',\r\n          // scope that want to access from the user\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          // get ref from auth obj and store in this component\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          // get the boolean from auth obj is it signedIn or not and pass it as arguement\r\n          // to update state in redux store\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // event listener ( method in prototype of isSigendIn from google api )\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  // to check that is user signed in or not\r\n  onAuthChange = isSignedIn => {\r\n    const { signIn, signOut } = this.props;\r\n    const userId = this.auth.currentUser.get().getId();\r\n    const firstName = this.auth.currentUser.get().getBasicProfile().ofa;\r\n    const lastName = this.auth.currentUser.get().getBasicProfile().wea;\r\n\r\n    const currentUser = {\r\n      userId,\r\n      firstName,\r\n      lastName\r\n    };\r\n    // call action creator signIn to set 'isSignedIn in redux store to be true'\r\n    // and pass the id, first name, last name of current user as an arguement as well\r\n    if (isSignedIn) {\r\n      signIn(currentUser);\r\n      // call action creator signOut to set 'isSignedIn in redux store to be false'\r\n    } else {\r\n      signOut();\r\n    }\r\n  };\r\n\r\n  // to sign in with google account\r\n  onSignIn = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  // to sign out\r\n  onSignOut = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderGoogleButton() {\r\n    const { isSignedIn } = this.props;\r\n\r\n    if (isSignedIn === null) {\r\n      return null;\r\n      // if already signed in\r\n    } else if (isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOut} className=\"btn btn-danger\">\r\n          <i className=\"fab fa-google\" /> Sign Out\r\n        </button>\r\n      );\r\n      // if not signed in\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignIn} className=\"btn btn-danger\">\r\n          <i className=\"fab fa-google\" /> Sign In\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderGoogleButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import { SIGN_IN, SIGN_OUT } from './types';\r\n\r\nexport const signIn = currentUser => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: currentUser\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavItem from './NavItem';\r\nimport GoogleAuth from '../auth/GoogleAuth';\r\n\r\n// Navbar\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Contact Book\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarMain\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <NavItem icon=\"fas fa-home\" text=\"Home\" path=\"/\" />\r\n            <NavItem\r\n              icon=\"fas fa-plus-square\"\r\n              text=\"Add Contact\"\r\n              path=\"/persons/add\"\r\n            />\r\n            <NavItem icon=\"fas fa-question-circle\" text=\"About\" path=\"/about\" />\r\n          </ul>{' '}\r\n        </div>\r\n        <GoogleAuth />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { delPerson } from '../../actions/personActions';\r\n\r\n// Infomation for each person\r\nclass Person extends Component {\r\n  // Delete the selected person ( filter by id )\r\n  deletePerson = id => {\r\n    this.props.delPerson(id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      id,\r\n      userDetails\r\n    } = this.props.person;\r\n\r\n    return (\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-header clearfix\">\r\n          <h4 className=\"text-secondary\">{firstName}</h4>\r\n          <small className=\"text-secondary\">\r\n            Added by {userDetails.firstName} {userDetails.lastName}\r\n          </small>\r\n        </div>\r\n        <div className=\"card-body text-secondary\">\r\n          <p>First Name: {firstName}</p>\r\n          <p>Last Name: {lastName}</p>\r\n          <p>Email: {email}</p>\r\n          <p>Phone: {phone}</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <Link className=\"btn btn-info\" to={`/persons/edit/${id}`}>\r\n            Edit\r\n          </Link>\r\n          <button\r\n            className=\"ml-2 btn btn-danger\"\r\n            onClick={this.deletePerson.bind(this, id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { delPerson }\r\n)(Person);\r\n","import {\r\n  FETCH_PERSONS,\r\n  FETCH_PERSON,\r\n  ADD_PERSON,\r\n  EDIT_PERSON,\r\n  DEL_PERSON\r\n} from './types';\r\n\r\nimport axios from 'axios';\r\n\r\n// Make a get request to fetch all persons in db\r\nexport const fetchPersons = () => async dispatch => {\r\n  const res = await axios.get(\r\n    'https://server-contactbook.herokuapp.com/persons/'\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_PERSONS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a get request to fetch the selected person\r\nexport const fetchPerson = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://server-contactbook.herokuapp.com/persons/${id}`\r\n  );\r\n\r\n  dispatch({\r\n    type: FETCH_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a post request to add new person into db\r\nexport const addPerson = person => async (dispatch, getState) => {\r\n  const { userDetails } = getState().auth;\r\n  const res = await axios.post(\r\n    'https://server-contactbook.herokuapp.com/persons/',\r\n    { ...person, userDetails }\r\n  );\r\n\r\n  dispatch({\r\n    type: ADD_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n// Make a delete request to delete that person on db\r\nexport const delPerson = id => async dispatch => {\r\n  await axios.delete(`https://server-contactbook.herokuapp.com/persons/${id}`);\r\n\r\n  dispatch({\r\n    type: DEL_PERSON,\r\n    payload: id\r\n  });\r\n};\r\n\r\n// Make a put request to update the selected person on db\r\nexport const editPerson = person => async dispatch => {\r\n  const res = await axios.put(\r\n    `https://server-contactbook.herokuapp.com/persons/${person.id}`,\r\n    person\r\n  );\r\n\r\n  dispatch({\r\n    type: EDIT_PERSON,\r\n    payload: res.data\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPersons } from '../../actions/personActions';\r\nimport Person from './Person';\r\n\r\n// Fetch persons from server and render all of it\r\nclass Persons extends Component {\r\n  componentDidMount() {\r\n    // Fetch all persons from api when page is loaded\r\n    this.props.fetchPersons();\r\n  }\r\n\r\n  // Custom function to render all person\r\n  renderPersons = () => {\r\n    const { persons } = this.props;\r\n    // // reverse 'persons' [array] to always set the newest at the top\r\n    // persons.reverse();\r\n    return persons.map(person => <Person key={person.id} person={person} />);\r\n  };\r\n\r\n  render() {\r\n    const { persons } = this.props;\r\n\r\n    // render spinner when waiting for ajax call\r\n    if (persons.length === 0)\r\n      return (\r\n        <div className=\"container my-5 text-center\">\r\n          <div className=\"spinner-border text-primary\" role=\"status\" />\r\n          <h1 className=\"mt-5 display-4 text-primary\">Add New Contact</h1>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <h1 className=\"display-4 mb-5 text-primary\">My Contacts</h1>\r\n        {this.renderPersons()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    persons: state.person.persons\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPersons }\r\n)(Persons);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst FormGroup = props => {\r\n  const { name, label, type, placeholder, error, value, handleChange } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          className={classnames('form-control', {\r\n            'is-invalid': error\r\n          })}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React, { Component } from 'react';\r\nimport FormGroup from './FormGroup';\r\n\r\nclass AddForm extends Component {\r\n  render() {\r\n    const { onChange, onSubmit } = this.props;\r\n    const {\r\n      errors,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone\r\n    } = this.props.parentState;\r\n\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <FormGroup\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter First Name\"\r\n          handleChange={onChange}\r\n          value={firstName}\r\n          error={errors.firstName}\r\n        />\r\n        <FormGroup\r\n          name=\"lastName\"\r\n          label=\"Last Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Last Name\"\r\n          handleChange={onChange}\r\n          value={lastName}\r\n          error={errors.lastName}\r\n        />\r\n        <FormGroup\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          placeholder=\"Enter Email\"\r\n          handleChange={onChange}\r\n          value={email}\r\n          error={errors.email}\r\n        />\r\n        <FormGroup\r\n          name=\"phone\"\r\n          label=\"Phone Number\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Phone Number\"\r\n          handleChange={onChange}\r\n          value={phone}\r\n          error={errors.phone}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPerson } from '../../actions/personActions';\r\nimport AddForm from '../layout/AddForm';\r\n\r\n// To add new person\r\nclass AddPerson extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  // Controlled input\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // Submit the form to call personActions for make POST request\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, email, phone } = this.state;\r\n\r\n    // Validation\r\n    if (firstName === '') {\r\n      this.setState({ errors: { firstName: 'First Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      this.setState({ errors: { lastName: 'Last Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone Number is required' } });\r\n      return;\r\n    }\r\n\r\n    // Create obj of newPerson to send POST request\r\n    const newPerson = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Call action creator\r\n    this.props.addPerson(newPerson);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to main page\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-secondary\">Add New Person</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <AddForm\r\n              parentState={this.state}\r\n              onChange={this.onChange}\r\n              onSubmit={this.onSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addPerson }\r\n)(AddPerson);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPerson, editPerson } from '../../actions/personActions';\r\nimport AddForm from '../layout/AddForm';\r\n\r\n// Edit person\r\nclass EditPerson extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.fetchPerson(id);\r\n  }\r\n\r\n  // after it DidMount it will be rerender then this lifecycle will be run\r\n  // if currentProps.person !== previousProps.person then update it to be currentProps.person\r\n  componentDidUpdate(prevProps, state, snapshot) {\r\n    if (this.props.person !== prevProps.person) {\r\n      this.setState(this.props.person);\r\n    }\r\n  }\r\n\r\n  // Controlled input\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  // Submit the form to call personActions for make PATCH request\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firstName, lastName, email, phone } = this.state;\r\n\r\n    // Validation\r\n    if (firstName === '') {\r\n      this.setState({ errors: { firstName: 'First Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      this.setState({ errors: { lastName: 'Last Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone Number is required' } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    // Create obj of updatedPerson to send PUT request\r\n    const updatedPerson = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // Call action creator\r\n    this.props.editPerson(updatedPerson);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to main page\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"text-secondary\">Edit Information</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <AddForm\r\n              parentState={this.state}\r\n              onChange={this.onChange}\r\n              onSubmit={this.onSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    person: state.person.person\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPerson, editPerson }\r\n)(EditPerson);\r\n","import React from 'react';\r\n\r\nconst Detail = props => {\r\n  const { title, para } = props;\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"card-title\">{title}</h3>\r\n      <p className=\"lead mb-3\">{para}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\n// Description for each tool that being used\r\nconst Tool = props => {\r\n  const { tool, description } = props;\r\n\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <h4>{tool}</h4>\r\n      <hr />\r\n      <p className=\"lead\">{description}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tool;\r\n","import React from 'react';\r\nimport Detail from './Detail';\r\nimport Tool from './Tool';\r\n\r\n// About page contains infomations of this application...\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container text-secondary\">\r\n      <div className=\"card my-5\">\r\n        <div className=\"card-header\">\r\n          <h1 className=\"display-4\">About</h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Detail\r\n            title=\"How to use\"\r\n            para=\"This application is the contact manager that can add contact\r\n            infomation such as firstname, lastname, email and phone number and\r\n            users can edit or delete the contact as well.\"\r\n          />\r\n          <Detail\r\n            title=\"Info\"\r\n            para=\"This application is created & developped by Paphob Aneakpoonsinsuk\r\n            for learning CRUD operations & RESTful api convention by react + redux in practice.This\r\n            application is deploy on github.io/contact-book/\"\r\n          />\r\n          <div className=\"my-3\">\r\n            <a\r\n              href=\"https://github.com/PaphobGun/contact-book\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-outline-primary\"\r\n            >\r\n              Repository\r\n            </a>\r\n          </div>\r\n          <h3 className=\"card-title\">Tools</h3>\r\n          <ul className=\"list-group my-3\">\r\n            <Tool\r\n              tool=\"json-server\"\r\n              description=\"Used json-server to be a fake api that contains the contacts data and this server is deploy on Heroku\"\r\n            />\r\n            <Tool\r\n              tool=\"React\"\r\n              description=\"Used React to build interactived UI\"\r\n            />\r\n            <Tool tool=\"Redux\" description=\"Used Redux to managing store\" />\r\n            <Tool\r\n              tool=\"React-router\"\r\n              description=\"Used React-router to make this application to be a single page\r\n              application\"\r\n            />\r\n            <Tool\r\n              tool=\"Redux-thunk\"\r\n              description=\"Used Redux-thunk to be a middileware for making AJAX call\"\r\n            />\r\n            <Tool\r\n              tool=\"Bootstrap\"\r\n              description=\"Used Bootstrap to style modern UI\"\r\n            />\r\n            <Tool tool=\"axios\" description=\"Used axios to make AJAX call\" />\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <h1 className=\"display-4 text-danger\">Error 404 Page Not Found</h1>\r\n      <div className=\"card mt-5\">\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">\r\n            Url is not correct please click the link on navbar to navigate to\r\n            the right page or click on this button\r\n          </div>\r\n          <hr />\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Go to home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport store from '../store';\nimport Navbar from './layout/Navbar';\nimport Persons from './persons/Persons';\nimport AddPerson from './persons/AddPerson';\nimport EditPerson from './persons/EditPerson';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound';\n\nimport '../App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Persons} />\n              <Route exact path=\"/persons/add\" component={AddPerson} />\n              <Route exact path=\"/persons/edit/:id\" component={EditPerson} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}